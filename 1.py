from telethon import TelegramClient
from telethon.errors.rpcerrorlist import PeerFloodError
import sys
import time

api_id = '3847679'
api_hash = '203eae28a3a7012a727c92e1f0a209ca'
client = TelegramClient('my_account', api_id, api_hash)

cht_fbc = 'tutors24edufbc'
cht_sat = 'tutors24edusat'
cht_edu = 'tutors24edu'
fbc = []
sat = []
edu = []
all = []

async def getter():
    participants = await client.get_participants(cht_fbc, aggressive=True)
    for user in participants:
        if user.id is not None:
            fbc.append(user.username)

    participants = await client.get_participants(cht_sat)
    for user in participants:
        if user.id is not None:
            sat.append(user.username)

    participants = await client.get_participants(cht_edu)
    for user in participants:
        if user.id is not None:
            edu.append(user.username)

    all = set(fbc)
    SLEEP_TIME = 15
    for user.username in all:
        try:
            print("Sending Message to:", user.username)
            await client.send_message(user.username, '‚ùóÔ∏èReminder\n'
                                                     '–ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ —Å–µ–≥–æ–¥–Ω—è –≤ 18:00 (–ù—É—Ä-–°—É–ª—Ç–∞–Ω, GMT+06) –Ω–∞—à –º–µ–Ω—Ç–æ—Ä –ê–π–¥–∞—Ä –ê–π–¥—Ä–∞–ª–∏–µ–≤ –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å –≤–µ–±–∏–Ω–∞—Ä-–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –∫—É—Ä—Å–∞ –ø–æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—é –≤ –°–®–êüá∫üá∏ \n'
                                                     '\n'
                                                     '–¢–∞–∫–∂–µ, –≤ –∫–æ–Ω—Ü–µ –æ–Ω –ø—Ä–æ–≤–µ–¥—ë—Ç Q&A —Å–µ—Å—Å–∏—é –∏ –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞ –í–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã!\n'
                                                     '\n'
                                                     '–°—Å—ã–ª–∫–∞ –Ω–∞ —É—á–∞—Å—Ç–∏–µ –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –≤ –Ω–∞—à–µ–º Telegram –∫–∞–Ω–∞–ª–µ:\n'
                                                     'https://t.me/tutors24edufbc')
            print("Waiting {} seconds".format(SLEEP_TIME))
            time.sleep(SLEEP_TIME)
        except PeerFloodError:
            print("Getting Flood Error from telegram. Script is stopping now. Please try again after some time.")
            sys.exit()
        except Exception as e:
            print("Error:", e)
            print("Trying to continue...")
        continue

    print(all)
    print(len(all))

with client:
    client.loop.run_until_complete(getter())

